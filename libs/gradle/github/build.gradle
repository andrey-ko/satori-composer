import org.jetbrains.kotlin.gradle.internal.*
apply from: rootProject.file('readme.gradle')
apply from: rootProject.file('metainfo.gradle')
apply plugin: "kotlin-kapt"
kapt {
  generateStubs = true
  correctErrorTypes = true
}
afterEvaluate {
  tasks.withType(KaptTask)*.group("codegen")
  tasks.withType(KaptGenerateStubsTask)*.group("codegen")
}
// kapt dependencies
dependencies {
  kapt project(":libs-gradle-plugin-processor")
}
//apply plugin: 'java-gradle-plugin'

/*gradlePlugin {
  plugins {
    transformPlugin {
      id = "com.satori.github"
      implementationClass = "${pckg}.GitHubPlugin"
    }
  }
}*/

// main dependencies
dependencies {
  compile project(":libs-gradle-utils")

  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"

  compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
  compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
  compile "com.fasterxml.jackson.module:jackson-module-afterburner:$jacksonVersion"
  compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"

  compile("com.damnhandy:handy-uri-templates:2.1.6")

  compile gradleApi()

  compileOnly project(":libs-gradle-plugin-annotations")
}


// test dependencies
dependencies {
  testCompile project(':libs-testlib')
  testCompile gradleTestKit()
}

